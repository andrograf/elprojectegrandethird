// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bitfit.DAL;

#nullable disable

namespace bitfit.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230126150456_GanttMigration")]
    partial class GanttMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bitfit.Model.Entities.Food", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("Calories")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "calories");

                    b.Property<double>("Carbohydrates")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "carbohydrates_total_g");

                    b.Property<double>("Cholesterol")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "cholesterol_mg");

                    b.Property<double>("FatSaturated")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "fat_saturated_g");

                    b.Property<double>("FatTotal")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "fat_total_g");

                    b.Property<double>("Fiber")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "fiber_g");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<double>("Potassium")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "potassium_mg");

                    b.Property<double>("Protein")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "protein_g");

                    b.Property<double>("ServingSize")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "serving_size_g");

                    b.Property<double>("Sodium")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "sodium_mg");

                    b.Property<double>("Sugar")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "sugar_g");

                    b.HasKey("Id");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("bitfit.Model.Entities.Recipe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ingredients");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "instructions");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Servings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "servings");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "title");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("bitfit.Model.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("BMI")
                        .HasColumnType("real");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("HeightInCm")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("WeightInKg")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
